// Source: src/main/resources/traffics/traffic.drl
package traffics;

import traffics.Traffic;
import traffics.TrafficResponse;
import traffics.DrivingStyle;
import traffics.CityLocator;

global CityLocator cityLocator;

import function traffics.Functions.*;

dialect "mvel"
no-loop

rule "traffic light green"
when
	$traffic : Traffic ( light == "green" )
then
  insertTrafficResponse ( kcontext, $traffic, "proceed" )
end

rule "traffic light red"
when
  $traffic : Traffic ( light == "red" )
then
  insertTrafficResponse ( kcontext, $traffic, "stop" )
end

rule "traffic light yellow and driving crazy"
when
  $traffic : Traffic ( light == "yellow" )
  DrivingStyle ( style == "crazy" )
then
  insertTrafficResponse ( kcontext, $traffic, "accelerate" )
end

rule "traffic light yellow and driving sane"
when
  $traffic : Traffic ( light == "yellow" )
  DrivingStyle ( style == "sane" )
then
  insertTrafficResponse ( kcontext, $traffic, "stop" )
end

rule "city is Boston"
when
  $traffic : Traffic ( eval ( cityLocator.city ( $traffic ) == "Boston" ) )
then
  insertDrivingStyle ( kcontext, "crazy" )
end

rule "city is not Boston"
when
  $traffic : Traffic (eval ( cityLocator.city ( $traffic ) != "Boston" ) )
then
  insertDrivingStyle ( kcontext, "sane" )
end
